version: "3.8"
services:
  # jenkins:
  #    image: jenkins/jenkins:latest
  #    container_name: jenkins
  #    ports:
  #      - "8081:8080"
  #      - "50000:50000"
  #    networks:
  #      - authenticate-service
  mysql:
    image: thaibao2002/mysql:8.0.37
    container_name: mysqldb
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: users_services
      MYSQL_ROOT_PASSWORD: 123456789
    networks:
      - authenticate-service
#  zookeeper:
#    image: thaibao2002/confluentinc-zookeeper:7.5.0
#    restart: always
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_SERVER_ID: 1
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
#    depends_on:
#      - mysql
#    networks:
#      - authenticate-service
#  kafka:
#    image: thaibao2002/confluentinc-kafka:7.5.0
#    hostname: kafka
#    container_name: kafka
#    restart: always
#    ports:
#      - "9092:9092"
#      - "9093:9093"
#    depends_on:
#      - zookeeper
#      - mysql
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:2092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_BROKER_ID: 2
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_JMX_PORT: 9093
#      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:2092
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#      CONFLUENT_METRICS_ENABLE: "true"
#      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
#    networks:
#      - authenticate-service
#  redis:
#    image: thaibao2002/redis                      #redis:6.0.7
#    container_name: redis
#    restart: always
#    ports:
#      - "6379:6379"
#    networks:
#      - authenticate-service
#    volumes:
#      - redis_volume_data:/data
#    depends_on:
#      - mysql
#      - zookeeper
#      - kafka
#  config-server:
#    image: thaibao2002/config-server
#    container_name: config-server
#    restart: always
#    ports:
#      - "8888:8888"
#    networks:
#      - authenticate-service
#    depends_on:
#      - mysql
##      - zookeeper
##      - kafka
#    #     - redis
#    environment:
#      server.port: 8888
#      eureka.instance.hostname: eureka-server
#      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka/
#  zipkin:
#    image: thaibao2002/openzipkin-zipkin:latest
#    container_name: zipkin
#    restart: always
#    ports:
#      - "9411:9411"
#    networks:
#      - authenticate-service
#    environment:
#      server.port: 9411
#    depends_on:
##      - zookeeper
##      - kafka
#      - mysql
##      - redis
#      - config-server
#  eureka-server:
#    image: thaibao2002/eureka-server
#    container_name: eureka-server
#    restart: always
#    ports:
#      - "8761:8761"
#    networks:
#      - authenticate-service
#    environment:
#      eureka.instance.hostname: eureka-server
#      CONFIG_HOST: config-server
#      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka/
#      server.port: 8761
#    depends_on:
#      - config-server
#  #      - kafka
#  #      - zookeeper
#  #      - redis
##      - zipkin
#  api-gateway:
#    image: thaibao2002/api-gateway
#    container_name: api-gateway
#    ports:
#      - "8999:8999"
#    networks:
#      - authenticate-service
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
##      - zookeeper
##      - kafka
##        - redis
#      - zipkin
#    environment:
#      server.port: 8999
#      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka/
#      CONFIG_HOST: config-server
#      SPRING_CLOUD_GATEWAY_ROUTES_0_ID: users-service
#      SPRING_CLOUD_GATEWAY_ROUTES_0_URI: http://users-service:9001/
#      SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0: Path=/auth/**
#      SPRING_CLOUD_GATEWAY_ROUTES_0_FILTERS_0: AuthFilter
#      SPRING_CLOUD_GATEWAY_ROUTES_1_URI: http://health-services:9002/
#      SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES: Path=/health/**
#      SPRING_CLOUD_GATEWAY_ROUTES_2_URI: http://users-healths:9003/
#      SPRING_CLOUD_GATEWAY_ROUTES_2_PREDICATES: Path=/users-health/**
#      SPRING_CLOUD_GATEWAY_ROUTES_3_URI: http://doctor-service:9005/
#      SPRING_CLOUD_GATEWAY_ROUTES_3_PREDICATES: Path=/doctors/**
#      SPRING_CLOUD_GATEWAY_ROUTES_4_URI: http://appointment-service:9006/
#      SPRING_CLOUD_GATEWAY_ROUTES_4_PREDICATES: Path=/doctorRecords/**
#      SPRING_CLOUD_GATEWAY_ROUTES_5_URI: http://appointment-service:9006/
#      SPRING_CLOUD_GATEWAY_ROUTES_5_PREDICATES: Path=/appointments/**
#      ZIPKIN-SERVER: zipkin
#  users-service:
#    image: thaibao2002/users-service
#    container_name: users-service
#    ports:
#      - "9001:9001"
#    networks:
#      - authenticate-service
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
##      - zookeeper
##      - kafka
##      - redis
#      - zipkin
#      - api-gateway
#    environment:
#      server.port: 9001
#      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka/
#      CONFIG_HOST: config-server
#      MYSQL_HOST: mysqldb
#      MYSQL_USER: root
#      MYSQL_PASSWORD: 123456789
#      MYSQL_PORT: 3306
#      ZIPKIN-SERVER: zipkin
#      DOCTOR_RECORD_HOST: appointment-service
#  appointment-service:
#    image: thaibao2002/appointment-service
#    container_name: appointment-service
#    ports:
#      - "9006:9006"
#    networks:
#      - authenticate-service
#    depends_on:
#      - eureka-server
#      - config-server
#      - api-gateway
#      - mysql
#    environment:
#      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
#      - EUREKA_INSTANCE_HOSTNAME=appointment-service
#      - EUREKA_INSTANCE_IP_ADDRESS=appointment-service
#      - EUREKA_SERVER_HOST=eureka-server
#      - EUREKA_SERVER_PORT=8761
#  #  health-services:
#  #    image: health-services
#  #    container_name: health-services
#  #    ports:
#  #      - "9002:9002"
#  #    networks:
#  #      - authenticate-service
#  #    depends_on:
#  #      - eureka-server
#  #      - config-server
#  #      - mysql
#  #      - zookeeper
#  #      - kafka
#  #      - redis
#  #      - zipkin
#  #      - api-gateway
#  #    environment:
#  #      server.port: 9002
#  #      CONFIG_HOST: config-server
#  #      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka/
#  #      GATEWAY-USERS-HEALTHS: users-healths
#  #      ZIPKIN-SERVER: zipkin
#  ##      spring.kafka.producer.bootstrap-servers: kafka:2092
#  #      KAFKA_SERVER: kafka:2092
#  #      KAFKA_PRODUCER: kafka:2092
#  #      REDIS_HOST: redis
##  users-healths:
##    image: thaibao2002/users-healths
##    container_name: users-healths
##    ports:
##      - "9003:9003"
##    networks:
##      - authenticate-service
##    depends_on:
##      - eureka-server
##      - config-server
##        - mysql
##        - zookeeper
##        - kafka
##        - redis
##        - zipkin
##        - api-gateway
##        - users-service
##        - health-services
##    environment:
##      server.port: 9003
##      CONFIG_HOST: config-server
##      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka/
##      GATEWAY-HEALTHS: health-services
##      ZIPKIN-SERVER: zipkin
##      KAFKA_SERVER: kafka:2092
##      KAFKA_PRODUCER: kafka:2092
##      GATEWAY-USERS-SERVICE-HEALTHS: users-health-service
networks:
  authenticate-service:
    driver: bridge
#volumes:
#  redis_volume_data:
#  redis_insight_volume_data:
